var fs = require('fs');
var path = require('path');
var CopyDir = require("copyDir");
var UglifyJS = require("uglify-js");
var htmlminify = require('html-minify');
var UglifyJS = require("html-minify/node_modules/uglify-js");
var CleanCSS = require('html-minify/node_modules/clean-css');
// var cssMinify = new CleanCSS();
// var minifiedCSS = cleanCSS.process(source);
// var mini = UglifyJS.minify(fileIn).code;

function MinifyAll(){
    var that = this;
    that.init = function(options) {
        var appDir = process.cwd();
        console.log('\nUploadToCMS==================================');
        that.path = options.path;
        var dirname = path.basename(that.path);
        // console.log('UglifyJS is:',UglifyJS)
        // console.log('CleanCSS is:',CleanCSS)
        process.chdir(options.path);
        process.chdir('../');
        var parentDirname = process.cwd();
        var minifyDir = parentDirname+'/'+dirname+'[minify]';
        // console.log('path.basename(process.cwd()) is:',path.basename(process.cwd()))
        CopyDir.copyDir(that.path, minifyDir, function (err) {
        // CopyDir.copyDir(that.path, process.cwd()+'/'+'test'+'[minify]', function (err) {
            if (err) {
                console.log("error ocur");
                console.dir(err);
            } else {
                console.log("copy ok");
                process.chdir(minifyDir);
                minifyHTMLJSCSS({path:minifyDir});
                process.chdir(appDir);
                window.alert('压缩成功');
            }
        });

        function minifyHTML(fileIn,fileOut) {
            var data = fs.readFileSync(fileIn, 'utf8');
            var mini = data;
            try{
                var mini = htmlminify.minify(data,{removeComments: true,collapseWhitespace: true,minifyJS:true, minifyCSS:true});
            }catch(e){
                console.error("miniFile error",fileIn,';error is:',e);
                return;
            }
            fs.writeFileSync(fileOut, mini, 'utf8');
            console.log('minifyHTML:',fileIn,'ok')
        }
        function minifyCSS(fileIn,fileOut) {
            var data = fs.readFileSync(fileIn, 'utf8');
            var mini = data;
            // debugLog("success create dir:", dirpath);
            try{
                var mini = CleanCSS.process(data);
            }catch(e){
                // console.error("CleanCSS.process : ",CleanCSS.process);
                console.error("minicss error : ",fileIn,';error is:',e);
                return;
            }
            fs.writeFileSync(fileOut, mini, 'utf8');
            console.log('minifyCSS:',fileIn,' ok')
        }
        function minifyJS(fileIn,fileOut) {
            try{
                var mini = UglifyJS.minify(fileIn).code;
            }catch(e){
                console.error("minifyJS error : "+fileIn,';error is:',e);
                return;
            }
            fs.writeFileSync(fileOut, mini, 'utf8');
            console.log('minifyJS:',fileIn,' ok')
        }
        function getAllFiles(root) {
            var res = [];
            var files = fs.readdirSync(root);
            files.forEach(function(file) {
                var pathname = root + '\\' + file,
                    stat = fs.lstatSync(pathname);
                if (!stat.isDirectory()) {
                    res.push(pathname);
                } else {
                    res = res.concat(getAllFiles(pathname));
                }
            });
            return res
        }
        function minifyHTMLJSCSS(a_options){
            var files = getAllFiles(a_options.path);
            files.forEach(function(a_fileName){
                switch(path.extname(a_fileName)){
                    case '.html':
                        console.log('minify :',a_fileName);
                        minifyHTML(a_fileName, a_fileName);
                        break;
                    case '.js':
                        console.log('minify :',a_fileName);
                        minifyJS(a_fileName,a_fileName);
                        break;
                    case '.css':
                        console.log('minify :',a_fileName);
                        minifyCSS(a_fileName,a_fileName);
                        break;
                    default:
                        break;
                }
                return;
            });
        }

    }
}

exports.MinifyAll = MinifyAll;