var fs = require('fs');
var path = require('path');
var child_process = require('child_process');

var zipcommand = '7z';
var zipFileType = '*.html *.jpg *.png *.js *.css img css js media images base modules'

function getCurrentDir(root) {
    try{
        var files = fs.readdirSync(root);
    }catch(e){
        // error('getCurrentDir error, root is:'+root);
        return getCurrentDir(root);
    }
    return files
}

function getAllFiles(root) {
    var res = [];
    var files = fs.readdirSync(root);
    files.forEach(function(file) {
        var pathname = root + '\\' + file,
            stat = fs.lstatSync(pathname);
        if (!stat.isDirectory()) {
            res.push(pathname);
        } else {
            res = res.concat(getAllFiles(pathname));
        }
    });
    return res
}
var deleteFiles = (function(){
    function iterator(url,dirs){
      // info('iterator url is:'+url)
        var stat = fs.statSync(url);
        if(stat.isDirectory()){
            dirs.unshift(url);//收集目录
            inner(url,dirs);
        }else if(stat.isFile()){
            fs.unlinkSync(url);//直接删除文件
            // info('unlinkSync:'+url)
        }
    }
    function inner(path,dirs){
      // info('inner path is:'+path)
        var arr = fs.readdirSync(path);
        for(var i = 0, el ; el = arr[i++];){
            iterator(path+"/"+el,dirs);
        }
    }
    return function(dir,cb){
        cb = cb || function(){};
        var dirs = [];

        try{
            iterator(dir,dirs);
            for(var i = 0, el ; el = dirs[i++];){
                fs.rmdirSync(el);//一次性删除所有收集到的目录
                // info('rmdirSync:'+el)
            }
            cb()
        }catch(e){//如果文件或目录本来就不存在，fs.statSync会报错，不过我们还是当成没有异常发生
            e.code === "ENOENT" ? cb() : cb(e);
        }
    }
})();
function Zip_dir() {
    // console.log('zipPageDir, root is:',root)
    this.init = function (options) {
        console.log('init, path is:',options.path);
        process.chdir(options.path);
        child_process.exec(zipcommand + ' a '+options.path+'/hello.zip '+zipFileType, function(error, stdout, stderr) {
            if(error){
                console.warn('zip error is:',error)
            }
            if(options.callback) options.callback();
        })

    }


}

exports.Zip_dir = Zip_dir;